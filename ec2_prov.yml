---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    become: true
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: Wipro_SG_Public_Webserver # Change the security group name here
      image: ami-76144b0a  # RHEL AMI
      keypair: wipro_devops # This is one of my keys that i already have in AWS
      region: ap-southeast-1 # Change the Region
      count: 1
      Machine_Name: "{{ Machine_Name }}"
      #artifactory_url: http://13.250.14.248:8081/artifactory/WebappJava/
      #application_artifact: StrutsLoginEx.war
      #source_path: /opt/artifactory_packages/
      # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Launch the new EC2 Instance
        ec2:
          ec2_url: "{{ ec_url }}"
          aws_access_key: "{{ aws_ac_key }}"
          aws_secret_key: "{{ aws_sec_key }}"
          group_id: sg-096797fc3ce901c63
          instance_type: "{{ instance_type}}"
          image: "{{ image }}"
          instance_tags:
            Name: "{{ Machine_Name }}"
            Environment: "Test_POC"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          vpc_subnet_id: subnet-0e3dde91a0167bb9c
          assign_public_ip: yes
        register: ec2

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile
                      dest="/opt/ansible/envpov/inventory/appserver/hosts"
                      regexp={{ item.public_ip }}
                      insertafter="[app_server]" line={{ item.public_ip }}
        with_items: '{{ ec2.instances }}'

      - name: Add new instance ip to a file for reference
        local_action: lineinfile
                      dest="/opt/ansible/envpov/newinstance/newhosts"
                      regexp={{ item.public_ip }}
                      insertafter=EOF line={{ item.public_ip }}
        with_items: '{{ ec2.instances }}'

      #- name: download artifact from artifary
      #  get_url:
      #     url: "{{ artifactory_url }}{{ application_artifact}}"
      #     dest: "{{ source_path }}"
      # with_items: '{{ ec2.instances }}'

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: '{{ ec2.instances }}'